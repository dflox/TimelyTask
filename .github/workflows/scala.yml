# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "main", manual-CICD ]

  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'

      - name: Git checkout (merge)
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - name: Git checkout (PR)
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          # see: https://frontside.com/blog/2020-05-26-github-actions-pull_request/#how-does-pull_request-affect-actionscheckout
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run tests and generate reports
        run: |
          sbt clean coverage test coverageReport
          sbt test # This runs the ScalaTest suite and generates XML reports
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge test reports
        if: always()
        run: |
          mkdir -p target/test-reports
          cat target/test-reports/*.xml > target/test-reports/TESTS-TestSuites.xml

      - name: Upload coverage data to Coveralls
        run: sbt coverageReport coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: Scala ${{ matrix.scala }}

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0
        with:
          args: >
            -Dsonar.projectKey=dflox_TimelyTask
            -Dsonar.organization=timelytask
            -Dsonar.testExecutionReportPaths=target/test-reports/TESTS-TestSuites.xml
            -Dsonar.scala.coverage.reportPaths=/target/scala-3.5.1/scoverage-report/scoverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
